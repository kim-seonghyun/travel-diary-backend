<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trip.user.mapper.UserMapper">

    <resultMap id="user" type="com.ssafy.trip.user.entity.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
        <result property="dotori" column="dotori"/>
        <result property="profileImg" column="profile_img"/>
    </resultMap>

    <resultMap id="refreshToken" type="com.ssafy.trip.user.dto.response.RefreshTokenResponse">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="token" column="token"/>
        <result property="createdAt" column="created_at"/>
        <result property="expiresAt" column="expires_at"/>
    </resultMap>

    <insert id="join" parameterType="com.ssafy.trip.user.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (name, email, password, role, created_at, dotori)
        VALUES (#{name}, #{email}, #{password}, #{role}, now(), #{dotori});
    </insert>

    <update id="updateDotoriByUserId" parameterType="map">
        update user set dotori = #{newDotori} where id = #{userId}
    </update>
    
    <select id="selectByUserId" parameterType="Long" resultMap="user">
        select * from user where id = #{userId}
    </select>

    <select id="findByEmail" parameterType="String" resultMap="user">
        select * from user where email = #{email}
    </select>
    
    <insert id="registerRefreshToken" parameterType="map">
        insert into refresh_token (user_id, token, created_at, expires_at)
        values (#{userId}, #{refreshToken}, now(), #{expiration})
    </insert>

    <select id="searchRefreshTokenByUserId" parameterType="Long" resultMap="refreshToken">
        select * from refresh_token where user_id = #{userId}
    </select>

    <delete id="deleteRefreshTokenByUserId" parameterType="Long">
        delete from refresh_token where user_id = #{userId}
    </delete>

    <select id="login" parameterType="map" resultMap="user">
        select * from user where email = #{email} and password = #{password}
    </select>

    <delete id="deleteUser" parameterType="Long">
        delete from user where id = #{id}
    </delete>
</mapper>